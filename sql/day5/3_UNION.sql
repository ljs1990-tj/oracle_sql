-- UNION, UNION ALL
-- SELECT 쿼리실행 결과를 합쳐주는 명령어

SELECT 
    STU_NO,
    STU_NAME,
    STU_DEPT
FROM STUDENT
WHERE STU_HEIGHT >= 170
UNION -- UNION => 중복은 1개로 출력
SELECT 
    STU_NO,
    STU_NAME,
    STU_DEPT
FROM STUDENT
WHERE STU_WEIGHT >= 50;


SELECT 
    STU_NO,
    STU_NAME,
    STU_DEPT
FROM STUDENT
WHERE STU_HEIGHT >= 170
UNION ALL -- UNION ALL => 중복된 값을 그대로 출력(2개이상으로)
SELECT 
    STU_NO,
    STU_NAME,
    STU_DEPT
FROM STUDENT
WHERE STU_WEIGHT >= 50;

-- 주의점
-- 1. 컬럼의 개수, 타입이 같아야 한다.
-- 2. 컬럼의 이름(별칭)은 먼저 나오는 쿼리의 이름(별칭)을 따른다.
-- 3. 정렬(ORDER BY)는 맨 마지막줄에서만 첫번째 쿼리 컬럼을 기준으로 가능

SELECT STU_NAME FROM STUDENT
UNION
SELECT COUNT(*) FROM STUDENT; -- 컬럼의 타입이 다르기 때문에 불가능

SELECT STU_NAME AS TEMP FROM STUDENT -- 컬럼의 이름은 첫번째를 따른다.
UNION
SELECT STU_DEPT FROM STUDENT; -- 컬럼의 타입이 같기 때문에 가능


SELECT STU_NAME FROM STUDENT 
UNION
SELECT STU_NAME, STU_DEPT FROM STUDENT; -- 컬럼의 개수가 다르므로 불가능


SELECT STU_NAME, AVG(ENR_GRADE) 평균점수, 1 AS ORDERKEY
FROM STUDENT S 
INNER JOIN ENROL E ON S.STU_NO = E.STU_NO
GROUP BY STU_NAME
UNION
SELECT '전체평균', ROUND(AVG(ENR_GRADE), 1), 2 AS ORDERKEY
FROM ENROL
ORDER BY ORDERKEY, 평균점수 DESC;


SELECT STU_NAME, 평균점수
FROM (
    SELECT STU_NAME, AVG(ENR_GRADE) 평균점수, 1 AS ORDERKEY
    FROM STUDENT S 
    INNER JOIN ENROL E ON S.STU_NO = E.STU_NO
    GROUP BY STU_NAME
    UNION
    SELECT '전체평균', ROUND(AVG(ENR_GRADE), 1), 2 AS ORDERKEY
    FROM ENROL
    ORDER BY ORDERKEY, 평균점수 DESC
);


SELECT DNAME AS 부서, 평균금액
FROM (
    SELECT DNAME, ROUND(AVG(SAL)) AS 평균금액, 1 AS ORDERKEY
    FROM EMP E
    INNER JOIN DEPT D ON E.DEPTNO = D.DEPTNO
    GROUP BY DNAME
    UNION
    SELECT '전체 평균', ROUND(AVG(SAL)), 2 AS ORDERKEY
    FROM EMP
    ORDER BY ORDERKEY, 평균금액 DESC
);


