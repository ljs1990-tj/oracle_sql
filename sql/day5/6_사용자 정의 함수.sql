-- PL/SQL
-- 사용자 정의 함수, 프로시저, 트리거

-- OR REPLACE 는 선택
-- 기존에 함수명(MULTI)가 정의되어 있으면 아래 내용으로 수정하겠다
-- 선언부(선택), 실행부, 예외처리(선택)
-- 마지막은 '/' 로 마무리
CREATE OR REPLACE FUNCTION MULTI
    (P_VALUE IN NUMBER)
RETURN NUMBER
IS
BEGIN
    RETURN P_VALUE * 2;
END;
/ 

SELECT MULTI(10)
FROM DUAL;
SELECT SAL, MULTI(SAL) 급여가두배
FROM EMP;

-- DATE형 데이터를 받아서 'YYYY-MM-DD HH24:MI:SS' 형태로 리턴
CREATE OR REPLACE FUNCTION DATE_FUNC
    (P_DATE IN DATE)
RETURN VARCHAR2
IS
BEGIN
    RETURN TO_CHAR(P_DATE, 'YYYY-MM-DD HH24:MI:SS');
END;
/

UPDATE TBL_BOARD
SET
    UDATETIME = SYSDATE
WHERE BOARDNO IN(1,3,5,7);
COMMIT;

SELECT 
    TITLE,
    DATE_FUNC(UDATETIME),
    TO_CHAR(UDATETIME, 'YYYY-MM-DD HH24:MI:SS')
FROM TBL_BOARD;


-- DATE_FUNC2(DATE, 'DATETIME') -> 'YYYY-MM-DD HH24:MI:SS';
-- DATE_FUNC2(DATE, 'DATE') -> 'YYYY-MM-DD';
-- DATE_FUNC2(DATE, 'TIME') -> 'HH24:MI:SS';
CREATE OR REPLACE FUNCTION DATE_FUNC2
    (
        P_DATE IN DATE,
        P_KEY IN VARCHAR2
    )
RETURN VARCHAR2
IS
BEGIN
    IF P_KEY = 'DATETIME' THEN
        RETURN TO_CHAR(P_DATE, 'YYYY-MM-DD HH24:MI:SS');
    ELSIF P_KEY = 'DATE' THEN
        RETURN TO_CHAR(P_DATE, 'YYYY-MM-DD');
    ELSIF P_KEY = 'TIME' THEN
        RETURN TO_CHAR(P_DATE, 'HH24:MI:SS');
    ELSE
        RETURN '키값 확인바람';
    END IF;    
END;
/

SELECT 
    DATE_FUNC2(UDATETIME, 'DATETIME') || '  ',
    DATE_FUNC2(UDATETIME, 'DATE') || '  ',
    DATE_FUNC2(UDATETIME, 'TIME')
FROM TBL_BOARD;


CREATE OR REPLACE FUNCTION SCORE_FUNC
    (P_SCORE IN NUMBER)
RETURN VARCHAR2
IS
BEGIN
    IF P_SCORE > 100 OR P_SCORE < 0 THEN
        RETURN '잘못된 숫자';
    ELSIF P_SCORE >= 90 THEN
        RETURN 'A';
    ELSIF P_SCORE >= 80 THEN
        RETURN 'B';
    ELSIF P_SCORE >= 70 THEN
        RETURN 'C';
    ELSE
        RETURN 'D';
    END IF;
END;
/

SELECT STU_NAME, ENR_GRADE, SCORE_FUNC(ENR_GRADE)
FROM STUDENT S
INNER JOIN ENROL E ON S.STU_NO = E.STU_NO;




